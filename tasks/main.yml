---
- name: Perform optional versionscheck
  ansible.builtin.include_tasks:
    file: "versioncheck.yml"
  when: submodules_versioncheck | bool

- name: Gather installed packages for checks later on
  ansible.builtin.package_facts:
    manager: "auto"

- name: Prepare gitea/forgejo variable import
  block:
    - name: Gather vars for gitea or forgejo
      ansible.builtin.include_vars:
        file: "{{ lookup('ansible.builtin.first_found',
          gitea_fork_variables) }}"
  rescue:
    - name: Gitea/Forgejo import info
      ansible.builtin.fail:
        msg: "Only {{ gitea_supported_forks }} are supported."

- name: Gather Gitea/Forgejo UI Theme variables
  ansible.builtin.include_vars:
    file: "{{ lookup('ansible.builtin.first_found', params) }}"
    name: _gitea_temp_theme_vars
  vars:
    params:
      files:
        - "{{ gitea_fork }}.yml"
      paths:
        - "defaults"

- name: Set Gitea/Forgejo UI Theme variables as facts
  ansible.builtin.set_fact:
    "{{ item.key }}": "{{ item.value }}"
  when: item.key not in vars
  loop: "{{ _gitea_temp_theme_vars | dict2items }}"

- name: Gather variables for each operating system
  ansible.builtin.include_vars:
    file: "{{ lookup('ansible.builtin.first_found', gitea_variables) }}"

- name: Gather versioning information
  ansible.builtin.include_tasks:
    file: "set_{{ gitea_fork | lower }}_version.yml"
  when: gitea_version != "source"

- name: Backup gitea before update
  ansible.builtin.include_tasks:
    file: "backup.yml"
  when: gitea_backup_on_upgrade|bool

- name: Create gitea user and group
  ansible.builtin.include_tasks:
    file: "create_user.yml"

- name: "Build and install from source [{{ gitea_fork }}]"
  ansible.builtin.include_tasks:
    file: "install_source.yml"
  when: gitea_version == "source"

- name: "Install or update {{ gitea_fork }}"
  ansible.builtin.include_tasks:
    file: "install_{{ gitea_fork | lower }}.yml"
  when: gitea_version != "source"

- name: Create directories
  ansible.builtin.include_tasks:
    file: "directory.yml"
  loop:
    - "{{ gitea_user_home }}"
    - "{{ gitea_home }}"
    - "{{ gitea_home }}/data"
    - "{{ gitea_custom }}"
    - "{{ gitea_custom }}/https"
    - "{{ gitea_custom }}/mailer"
    - "{{ gitea_home }}/indexers"
    - "{{ gitea_home }}/log"
    - "{{ gitea_repository_root }}"
    - "{{ gitea_configuration_path }}"

- name: Setup gitea systemd service
  ansible.builtin.include_tasks:
    file: "install_systemd.yml"
  when: ansible_service_mgr == "systemd"

- name: Generate JWT Secrets if undefined
  ansible.builtin.include_tasks:
    file: "jwt_secrets.yml"

- name: Generate gitea secrets if undefined
  ansible.builtin.include_tasks:
    file: "gitea_secrets.yml"

- name: Configure gitea
  ansible.builtin.include_tasks:
    file: "configure.yml"

- name: Deploy optional fail2ban rules
  ansible.builtin.include_tasks:
    file: "fail2ban.yml"
  when: gitea_fail2ban_enabled | bool

- name: Optionally customize gitea
  ansible.builtin.include_tasks:
    file: "customize_logo.yml"
  when: gitea_customize_logo | bool

- name: Optionally customize footer
  ansible.builtin.include_tasks:
    file: "customize_footer.yml"
  when: gitea_customize_footer | bool

- name: Optionally deploy public files
  ansible.builtin.include_tasks:
    file: "customize_public_files.yml"
  when: gitea_customize_files | bool or gitea_custom_themes is defined

- name: Optionally create local Users on git instance
  ansible.builtin.include_tasks:
    file: "local_git_users.yml"
  when: gitea_users | length > 0

- name: Optionally scheduled backup
  ansible.builtin.import_tasks:
    file: 'backup-scheduled.yml'
  when: gitea_backup_scheduled | bool
